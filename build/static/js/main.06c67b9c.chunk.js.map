{"version":3,"sources":["logo.svg","components/Country.js","components/Label.js","components/Graticule.js","components/Bathymetry.js","components/Map.js","components/MapRenderer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Country","props","path","d3","projection","react_default","a","createElement","className","d","feature","fill","stroke","strokeWidth","Label","scaleFactor","size","fontStyle","concat","value","properties","NAME","xOffset","length","x","y","style","font","color","Graticule","Bathymetry","Map","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","labelData","MAPDATA_HIGH","features","map","area","coordinates","centroid","d3projections","center","w","width","h","height","lon","lat","svgRef","scale","Math","PI","translate","rotate","mapData","renderLevel","MAPDATA_LOW","statePaths","_getStatePaths","graticules","bathymetry","labels","_getLabelData","ref","data","_this","i","components_Country","key","_this2","components_Graticule","_this3","dataset","j","components_Bathymetry","_this4","c","projectedCoord","components_Label","Component","coordinateEquals","b","MapRenderer","window","onresize","state","isDragging","isAnimating","lastCusorPos","_mouseDownHandler","bind","assertThisInitialized","_mouseUpHandler","_mouseMoveHandler","_animate","console","log","nextProps","nextState","JSON","stringify","handler","cursor","onMouseDown","onMouseUp","onMouseMove","debounce","e","persist","components_Map","document","body","clientWidth","clientHeight","newState","pageX","pageY","setState","assign","xDiff","yDiff","destLat","destLon","destination","currentCoords","destCoords","tween","Between","time","easing","Easing","Cubic","InOut","on","v","pause","App","searchString","_inputHandler","_geolocate","_download","React","createRef","onChange","onClick","components_MapRenderer","target","name","current","svg","innerHTML","btoa","blob","Blob","type","download","address","callback","parseInt","asyncToGenerator","regenerator_default","mark","_callee","json","wrap","_context","prev","next","ky","get","sent","stop","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06c67b9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport * as d3 from 'd3';\n\nconst Country = (props) => {\n  const path = d3.geoPath().projection(props.projection)\n\n  return (\n    <g>\n      <path className='country' d={path(props.feature)} fill=\"#EFE9E1\" stroke=\"#FEAB6C\" strokeWidth={0.35} />\n    </g>\n  )\n}\n\nexport default Country;\n","import React from 'react';\n\nconst Label = (props) => {\n  const scaleFactor = props.size*0.001\n  const fontStyle = `bold ${5+scaleFactor}px sans-serif` //${props.size > 20 ? 'bold' : 'normal'}\n  const value = props.properties.NAME\n  const xOffset = (value.length/2)*2.3+scaleFactor\n\n  return (\n    <text\n      stroke='white'\n      strokeWidth={0.3}\n      x={props.x-xOffset}\n      y={props.y}\n      style={{font: fontStyle, color: '#253044'}}>\n\n      {value}\n    </text>\n  )\n}\n\nexport default Label;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nconst Graticule = (props) => {\n  const path = d3.geoPath().projection(props.projection)\n\n  return (\n    <g>\n      <path className='graticule' d={path(props.feature)} fill=\"none\" stroke=\"#FEAB6C\" strokeWidth={1} />\n    </g>\n  )\n}\n\nexport default Graticule;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nconst Bathymetry = (props) => {\n  const path = d3.geoPath().projection(props.projection)\n  //rgba(117, 193, 240, 0.63)\n\n  return (\n    <g>\n      <path className='bathymetry' d={path(props.feature)} fill=\"rgba(100, 160, 240, 0.63)\" stroke=\"#FEAB6C\" strokeWidth={0} />\n    </g>\n  )\n}\n\nexport default Bathymetry;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as d3projections from 'd3-geo-projection';\n\nimport Country from './Country'\nimport Label from './Label'\nimport Graticule from './Graticule'\nimport Bathymetry from './Bathymetry'\n\nimport MAPDATA_LOW from '../map-data/110m';\nimport MAPDATA_HIGH from '../map-data/50m';\nimport GRATICULES from '../map-data/graticules_10';\n\nimport BATHYMETRY_0 from '../map-data/bathymetry_J_1000';\nimport BATHYMETRY_1 from '../map-data/bathymetry_H_3000';\nimport BATHYMETRY_2 from '../map-data/bathymetry_G_4000';\nimport BATHYMETRY_3 from '../map-data/bathymetry_F_5000';\n\nclass Map extends Component {\n  constructor() {\n    super()\n  }\n\n  componentWillMount() {\n    const getLabelData = (data) => {\n     return data.features.map(feature => {\n       return {\n         size: d3.geoPath().area(feature),\n         coordinates: d3.geoPath().centroid(feature),\n         properties: feature.properties\n       }\n     })\n    }\n\n    this.labelData = getLabelData(MAPDATA_HIGH)\n\n    this.projection = d3projections.geoCylindricalEqualArea()\n       // .rotate([-120, -14, 0]) //long, lat, 0\n       // .parallel(45)\n       .center([0, 0]) // set centre to further North\n       // .scale([w/(2*Math.PI)]) // scale to fit group width\n  }\n\n  render() {\n    const w = this.props.width\n    const h = this.props.height\n    const lon = this.props.lon\n    const lat = this.props.lat\n    const svgRef = this.props.svgRef\n    // const projection = this.props.projection\n\n    this.projection\n       .scale([w/(2*Math.PI)*1.4]) // scale to fit group width\n       .translate([w/2,h/2]) // ensure centred in group\n    this.projection.rotate([-lat,-lon, 0])\n\n    const mapData = this.props.renderLevel === 0 ? MAPDATA_LOW : MAPDATA_HIGH\n    const statePaths = this._getStatePaths(mapData)\n    const graticules = this.props.renderLevel === 0 ? [] : []//this._getGraticules(GRATICULES)\n    const bathymetry = this.props.renderLevel === 0 ? [] : []//this._getBathymetry([BATHYMETRY_3])\n    const labels = this.props.renderLevel === 0 ? [] : this._getLabelData()\n\n    return (\n      <div>\n\n      <div ref={this.props.svgRef}>\n        <svg className=\"container noselect\" width={this.props.width} height={this.props.height}>\n          <rect width={this.props.width} height={this.props.height} fill={'#76CFF0'}></rect>\n          <g className=\"countries\">\n            {statePaths}\n          </g>\n          <g className=\"bathymetry\">\n            {bathymetry}\n          </g>\n          <g className=\"graticules\">\n            {graticules}\n          </g>\n          <g className=\"labels\">\n            {labels}\n          </g>\n        </svg>\n      </div>\n      </div>\n    );\n  }\n\n  _getStatePaths(data) {\n    return data.features.map((feature, i) => {\n      return <Country projection={this.projection} feature={feature} key={i} />;\n    })\n  }\n\n  _getGraticules(data) {\n    return data.features.map((feature, i) => {\n      return <Graticule projection={this.projection} feature={feature} key={i} />;\n    })\n  }\n\n  _getBathymetry(data) {\n    return data.map((dataset, i) => {\n      return dataset.features.map((feature, j) => {\n        return <Bathymetry projection={this.projection} feature={feature} key={i+j} />;\n      })\n    })\n  }\n\n  _getLabelData() {\n    // TODO: This dataset is actually already available on the natural earth repo in the /geojson directory\n    // This would mean no edge cases like america label offset because of Hawaii skewing centroid\n    return this.labelData.map((c, i) => {\n      const projectedCoord = this.projection([c.coordinates[0], c.coordinates[1]])\n      return <Label x={projectedCoord[0]} y={projectedCoord[1]} properties={c.properties} size={c.size} key={i}/>\n    })\n  }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport _ from 'kefir'\nimport Between from 'between.js';\nimport Easing from 'easing-functions';\nimport { throttle, debounce } from 'throttle-debounce';\nimport Map from './Map'\n\nconst coordinateEquals = (a, b) => {\n  return a.lat == b.lat && a.lon === b.lon\n}\n\nconst objectEquals = (a, b) => {\n  return JSON.stringify(a) === JSON.stringify(b)\n}\n\nconst captureEvent = (handler) => {\n  return (e) => {\n    e.persist()\n    return handler(e)\n  }\n}\n\nclass MapRenderer extends Component {\n  constructor() {\n    super()\n    window.onresize = () => {\n      // this.forceUpdate()\n    }\n\n    this.state = {\n      lon: 0,\n      lat: 0,\n      isDragging: false,\n      isAnimating: false,\n      lastCusorPos: {\n        x: null,\n        y: null\n      },\n    }\n\n    this._mouseDownHandler = this._mouseDownHandler.bind(this)\n    this._mouseUpHandler = this._mouseUpHandler.bind(this)\n    this._mouseMoveHandler = this._mouseMoveHandler.bind(this)\n  }\n\n  componentWillReceiveProps(props) {\n    if(!coordinateEquals(props, this.state) && !coordinateEquals(props, this.props)){\n      this._animate(props.lat, props.lon)\n      console.log(\"animating\")\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Otherwise it rerenders unnecesarily (eg during typing into input box)\n    if(coordinateEquals(this.props, nextProps) && objectEquals(this.state, nextState)) {\n      return false\n    }\n    return true\n  }\n\n  render() {\n    const renderLevel = this.state.isDragging || this.state.isAnimating ? 0 : 1\n    const cursor = this.state.isDragging ? 'grabbing' : 'grab'\n\n    return (\n      <div style={{cursor: cursor}}\n              onMouseDown={this._mouseDownHandler}\n              onMouseUp={this._mouseUpHandler}\n              onMouseMove={captureEvent(debounce(10, this._mouseMoveHandler))}>\n        <Map\n          renderLevel={renderLevel}\n          lon={this.state.lon}\n          lat={this.state.lat}\n          width={document.body.clientWidth}\n          height={document.body.clientHeight}\n          svgRef={this.props.svgRef}\n        />\n      </div>\n    )\n  }\n\n  _mouseDownHandler(e) {\n    const newState = {\n      isDragging: true,\n      lastCusorPos: {\n        x: e.pageX,\n        y: e.pageY\n      }\n    }\n    this.setState(Object.assign({}, this.state, newState))\n  }\n\n  _mouseUpHandler(e) {\n    const newState = {\n      isDragging: false,\n      lastCusorPos: {\n        x: null,\n        y: null\n      }\n    }\n    this.setState(Object.assign({}, this.state, newState))\n  }\n\n  _mouseMoveHandler(e) {\n    if(this.state.isDragging) {\n      const xDiff = e.pageX - this.state.lastCusorPos.x\n      const yDiff = e.pageY - this.state.lastCusorPos.y\n\n      const lon = this.state.lon-yDiff\n      const lat = this.state.lat+xDiff\n\n      this.setState(Object.assign({}, this.state, {\n        lon: lon,\n        lat: lat,\n        lastCusorPos: {\n          x: e.pageX,\n          y: e.pageY\n        }\n      }))\n    }\n  }\n\n  _animate(destLat, destLon) {\n    const destination = {\n      lat: destLat,\n      lon: destLon\n    }\n    if(!coordinateEquals(this.state, destination)) {\n      this.setState(Object.assign({}, this.state, {isAnimating: true}))\n      const currentCoords = {\n        lat: this.state.lat,\n        lon: this.state.lon\n      }\n      const destCoords = {\n        lat: destLat,\n        lon: destLon\n      }\n      const tween = new Between(currentCoords, destCoords)\n        .time(3000)\n        .easing(Between.Easing.Cubic.InOut)\n        .on('update', (v) => {\n            if(this.state.isAnimating) {\n              this.setState(Object.assign({}, this.state, {lat: v.lat, lon: v.lon}))\n            } else {\n              tween.pause()\n            }\n\n            if(this.state.isDragging) {\n              tween.pause()\n              this.setState(Object.assign({}, this.state, {isAnimating: false}))\n            }\n        }).on('complete', (value) => {\n            this.setState(Object.assign({}, this.state, {isAnimating: false}))\n        });\n    }\n  }\n}\n\n\nexport default MapRenderer;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MapRenderer from './components/MapRenderer'\nimport ky from 'ky';\nimport download from 'downloadjs'\n\nconst request = (address, callback) => {\n  const constructRequest = (a) => `https://eu1.locationiq.com/v1/search.php?key=${'10bb188a4dae33'}&q=${a}&format=json`\n  console.log(\"Making request\");\n  (async () => {\n    console.log(\"WHY IS NOD\");\n    const json = await ky.get(constructRequest(address)).json();\n    console.log(json);\n\n    callback(json)\n  })();\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      searchString: '',\n      lon: 0,\n      lat: 0,\n    }\n\n    this._inputHandler = this._inputHandler.bind(this)\n    this._geolocate = this._geolocate.bind(this)\n    this._download = this._download.bind(this)\n\n    this.svgRef = React.createRef()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"toolbar\">\n          <input onChange={this._inputHandler} />\n          <button onClick={this._geolocate}>Go</button>\n          <button onClick={this._download}>Download</button>\n\n        </div>\n        <MapRenderer lon={this.state.lat} lat={this.state.lon} svgRef={this.svgRef}/>\n      </div>\n    );\n  }\n\n  _inputHandler(e) {\n    console.log(\"called\");\n    this.setState(Object.assign({}, this.state, {searchString: e.target.value}))\n  }\n\n  _generateDownloadableSvg(name) {\n    console.log(this.svgRef);\n    const header = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n                    <!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">`\n    if(!this.svgRef.current) return\n\n    const svg = header+this.svgRef.current.innerHTML\n    return `data:application/octet-stream;base64,${btoa(svg)}`\n  }\n\n  _download() {\n    console.log('hit download');\n    if(!this.svgRef.current) return\n\n    const svg = this.svgRef.current.innerHTML\n    const blob = new Blob([svg], {type: 'image/svg+xml'});\n    download(blob, \"maps.svg\", \"image/svg+xml\");\n  }\n\n  _geolocate(e) {\n    if(this.state.searchString.length === 0) {\n      this.setState(Object.assign({}, this.state, {lat: 0, lon: 0}))\n      return\n    }\n\n    request(this.state.searchString,\n      (d) => this.setState(Object.assign({}, this.state, {lat: parseInt(d[0].lat), lon: parseInt(d[0].lon)}))\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}