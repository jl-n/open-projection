{"version":3,"sources":["components/map/Country.js","components/map/Label.js","components/map/Graticule.js","components/map/Bathymetry.js","components/Map.js","Styles.js","components/MapRenderer.js","Projections.js","components/ProjectionSelect.js","Utils.js","App.js","serviceWorker.js","index.js"],"names":["Country","props","path","d3","projection","react_default","a","createElement","className","d","feature","fill","stroke","strokeWidth","Label","size","fontStyle","concat","value","properties","NAME","xOffset","length","x","y","color","style","font","Graticule","Bathymetry","Map","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_getStatePaths","bind","assertThisInitialized","_getGraticules","_getBathymetry","_getLabelData","svgRef","React","createRef","labelData","MAPDATA_HIGH","features","map","area","coordinates","centroid","d3projections","center","updateSvg","current","w","width","h","height","lon","lat","translate","rotate","fitExtent","MAPDATA_LOW","mapData","renderLevel","statePaths","graticules","GRATICULES","bathymetry","labels","ref","xmlns","mapStyle","sea","data","_this2","i","map_Country","borders","land","key","_this3","map_Graticule","_this4","dataset","j","map_Bathymetry","_this5","c","projectedCoord","map_Label","Component","styles","name","Styles","list","default","isValid","filter","p","get","s","coordinateEquals","b","objectEquals","JSON","stringify","MapRenderer","window","onresize","forceUpdate","state","isDragging","isAnimating","lastCusorPos","_mouseDownHandler","_mouseUpHandler","_mouseMoveHandler","setState","assign","_animate","nextProps","nextState","handler","cursor","downloadableMap","components_Map","Math","sqrt","onMouseDown","onMouseUp","onMouseMove","debounce","e","persist","document","body","clientWidth","clientHeight","newState","pageX","pageY","xDiff","yDiff","onLocationChange","destLat","destLon","destCoords","currentCoords","tween","Between","time","easing","Easing","Cubic","InOut","on","v","pause","projections","keys","includes","replace","displayName","trim","Projections","customStyles","control","provided","objectSpread","border","borderTop","borderRadius","outline","boxShadow",":hover","projectionOptions","label","ProjectionSelect","react_select_esm","onChange","options","updateUrl","history","replaceState","Utils","icon","iconSvg","feather","icons","toSvg","class","dangerouslySetInnerHTML","__html","styleIcon","colorA","colorB","isSelected","points","extractUrlParams","urlParams","setDefault","_urlParams","slicedToArray","projectionName","styleName","isNaN","parseInt","request","address","callback","console","log","asyncToGenerator","regenerator_default","mark","_callee","json","wrap","_context","prev","next","ky","sent","stop","App","pn","location","pathname","split","slice","_utils$extractUrlPara","utils","_utils$extractUrlPara2","searchString","searchLat","searchLon","currentLat","currentLon","svgNode","_inputHandler","_geolocate","_download","_handleKeyPress","_onLocationChange","_changeStyle","_changeProjection","_updateSvg","styleIcons","onClick","autoFocus","placeholder","onKeyPress","components_ProjectionSelect","op","selectedOption","components_MapRenderer","target","fileFormat","node","domtoimage","toPng","then","dataUrl","download","catch","error","blob","Blob","innerHTML","type","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.675bf243.chunk.js","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\n\nconst Country = (props) => {\n  const path = d3.geoPath().projection(props.projection)\n\n  return (\n    <g>\n      <path className='country' d={path(props.feature)} fill={props.fill} stroke={props.stroke} strokeWidth={props.strokeWidth} />\n    </g>\n  )\n}\n\nexport default Country;\n","import React from 'react';\n\nconst Label = (props) => {\n  const size = props.size\n  const fontStyle = `bold ${size}px sans-serif` //${props.size > 20 ? 'bold' : 'normal'}\n  const value = props.properties.NAME\n  const xOffset = (value.length/2)*2.3+size\n\n  return (\n    <text\n      stroke='white'\n      strokeWidth={0.3}\n      x={props.x-xOffset}\n      y={props.y}\n      fill={props.color}\n      style={{font: fontStyle, color: props.color}}>\n\n      {value}\n    </text>\n  )\n}\n\nexport default Label;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nconst Graticule = (props) => {\n  const path = d3.geoPath().projection(props.projection)\n\n  return (\n    <g>\n      <path className='graticule' d={path(props.feature)} fill=\"none\" stroke=\"#FEAB6C\" strokeWidth={props.strokeWidth} />\n    </g>\n  )\n}\n\nexport default Graticule;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nconst Bathymetry = (props) => {\n  const path = d3.geoPath().projection(props.projection)\n  //rgba(117, 193, 240, 0.63)\n\n  return (\n    <g>\n      <path className='bathymetry' d={path(props.feature)} fill={props.fill} stroke=\"#FEAB6C\" strokeWidth={0} />\n    </g>\n  )\n}\n\nexport default Bathymetry;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as d3projections from 'd3-geo-projection';\n\nimport Country from './map/Country'\nimport Label from './map/Label'\nimport Graticule from './map/Graticule'\nimport Bathymetry from './map/Bathymetry'\n\nimport MAPDATA_LOW from '../map-data/110m';\nimport MAPDATA_HIGH from '../map-data/50m';\nimport GRATICULES from '../map-data/graticules_10';\n\n// import BATHYMETRY_0 from '../map-data/bathymetry_J_1000';\n// import BATHYMETRY_1 from '../map-data/bathymetry_H_3000';\n// import BATHYMETRY_2 from '../map-data/bathymetry_G_4000';\n// import BATHYMETRY_3 from '../map-data/bathymetry_F_5000';\n\nclass Map extends Component {\n  constructor() {\n    super()\n\n    this._getStatePaths = this._getStatePaths.bind(this)\n    this._getGraticules = this._getGraticules.bind(this)\n    this._getBathymetry = this._getBathymetry.bind(this)\n    this._getLabelData = this._getLabelData.bind(this)\n\n    this.svgRef = React.createRef()\n  }\n\n  componentWillMount() {\n    const getLabelData = (data) => {\n     return data.features.map(feature => {\n       return {\n         size: d3.geoPath().area(feature),\n         coordinates: d3.geoPath().centroid(feature),\n         properties: feature.properties\n       }\n     })\n    }\n\n    this.labelData = getLabelData(MAPDATA_HIGH)\n\n    this.projection = d3projections.geoCylindricalEqualArea()\n       // .rotate([-120, -14, 0]) //long, lat, 0\n       // .parallel(45)\n       .center([0, 0]) // set centre to further North\n       // .scale([w/(2*Math.PI)]) // scale to fit group width\n  }\n\n  componentDidUpdate(props) {\n    if(props.updateSvg) {\n      this.props.updateSvg(this.svgRef.current)\n    }\n  }\n\n  componentDidMount() {\n    if(this.props.updateSvg) {\n      this.props.updateSvg(this.svgRef.current)\n    }\n  }\n\n  render() {\n    const w = this.props.width\n    const h = this.props.height\n    const lon = this.props.lon\n    const lat = this.props.lat\n    const projection = 'geo'+this.props.projection\n\n    // this.projection = d3projections[projection]().center([0, 0])\n\n    // this.projection\n    //    .scale([w/(2*Math.PI)*0.5]) // scale to fit group width\n    //    .translate([w/2,h/2]) // ensure centred in group\n    //    .rotate([-lon,-lat, 0])\n    //    // .fitSize([w, h], geojson)\n    //    .fitExtent([[20, 20],[w, h]], mapData)\n\n    this.projection = d3projections[projection]()\n     .center([0, 0])\n     .translate([w/2,h/2])\n     .rotate([-lon,-lat, 0])\n     .fitExtent([[30, 30],[w-30, h-30]], MAPDATA_LOW)\n\n    const mapData = this.props.renderLevel === 0 ? MAPDATA_LOW : MAPDATA_HIGH\n    const statePaths = this._getStatePaths(mapData)\n    const graticules = this.props.renderLevel === 0 ? [] : this._getGraticules(GRATICULES)\n    const bathymetry = this.props.renderLevel === 0 ? [] : []//this._getBathymetry([BATHYMETRY_3])\n    const labels = this.props.renderLevel === 0 ? [] : this._getLabelData()\n\n    return (\n      <div>\n        <div ref={this.svgRef}>\n          <svg xmlns='http://www.w3.org/2000/svg' className=\"container noselect\" width={this.props.width} height={this.props.height}>\n            <rect width={this.props.width} height={this.props.height} fill={this.props.mapStyle.sea}></rect>\n            <g className=\"countries\">\n              {statePaths}\n            </g>\n            <g className=\"bathymetry\">\n              {bathymetry}\n            </g>\n            <g className=\"graticules\">\n              {graticules}\n            </g>\n            <g className=\"labels\">\n              {labels}\n            </g>\n          </svg>\n        </div>\n      </div>\n    );\n  }\n\n  _getStatePaths(data) {\n    return data.features.map((feature, i) => {\n      return <Country stroke={this.props.mapStyle.borders} strokeWidth={this.props.width/3000} fill={this.props.mapStyle.land} projection={this.projection} feature={feature} key={i} />;\n    })\n  }\n\n  _getGraticules(data) {\n    return data.features.map((feature, i) => {\n      return <Graticule stroke={this.props.mapStyle.graticules} strokeWidth={this.props.width/2000} projection={this.projection} feature={feature} key={i} />;\n    })\n  }\n\n  _getBathymetry(data) {\n    return data.map((dataset, i) => {\n      return dataset.features.map((feature, j) => {\n        return <Bathymetry fill={this.props.mapStyle.sea} projection={this.projection} feature={feature} key={i+j} />;\n      })\n    })\n  }\n\n  _getLabelData() {\n    // TODO: This dataset is actually already available on the natural earth repo in the /geojson directory\n    // This would mean no edge cases like america label offset because of Hawaii skewing centroid\n    return this.labelData.map((c, i) => {\n      const projectedCoord = this.projection([c.coordinates[0], c.coordinates[1]])\n      return <Label x={projectedCoord[0]} y={projectedCoord[1]} properties={c.properties} color={this.props.mapStyle.labels} size={this.props.width/230} key={i}/>\n    })\n  }\n}\n\nexport default Map;\n","const styles = [\n  {\n    name: 'namria',\n    land: '#E6E8E9',\n    sea: '#C4D4E0',\n    labels: 'black',\n    borders: '#B90700',\n    graticules: '#B90700',\n  },\n  {\n    name: 'brownie',\n    land: 'brown',\n    sea: 'blue',\n    labels: 'white',\n    borders: 'orange',\n    graticules: 'orange'\n  },\n  {\n    name: 'orangeface',\n    land: 'orange',\n    sea: 'red',\n    labels: 'white',\n    borders: 'brown',\n    graticules: 'brown'\n  },\n]\n\nexport default {\n  list: styles,\n  default: styles[0],\n  isValid: (name) => {\n    return styles.filter((p) => p.name === name).length > 0\n  },\n  get: (name) => {\n    return styles.filter(s => name === s.name)[0]\n  }\n}\n","import React, { Component } from 'react';\nimport Between from 'between.js';\nimport { debounce } from 'throttle-debounce';\nimport Map from './Map'\nimport styles from '../Styles'\n\nconst coordinateEquals = (a, b) => {\n  return a.lat === b.lat && a.lon === b.lon\n}\n\nconst objectEquals = (a, b) => {\n  return JSON.stringify(a) === JSON.stringify(b)\n}\n\nconst captureEvent = (handler) => {\n  return (e) => {\n    e.persist()\n    return handler(e)\n  }\n}\n\nclass MapRenderer extends Component {\n  constructor() {\n    super()\n    window.onresize = () => {\n      this.forceUpdate()\n    }\n\n    this.state = {\n      lat: 0,\n      lon: 0,\n      style: styles[0],\n      isDragging: false,\n      isAnimating: false,\n      lastCusorPos: {\n        x: null,\n        y: null\n      },\n    }\n\n    this._mouseDownHandler = this._mouseDownHandler.bind(this)\n    this._mouseUpHandler = this._mouseUpHandler.bind(this)\n    this._mouseMoveHandler = this._mouseMoveHandler.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState(Object.assign({}, this.state, {lat: this.props.lat, lon: this.props.lon}))\n  }\n\n  componentWillReceiveProps(props) {\n    if(!coordinateEquals(props, this.state) && !coordinateEquals(props, this.props)){\n      this._animate(props.lat, props.lon)\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Prevent unnecesary rerenders when typing into input box\n    if(objectEquals(this.props, nextProps) && objectEquals(this.state, nextState)) {\n      return false\n    }\n    return true\n  }\n\n  render() {\n    const renderLevel = this.state.isDragging || this.state.isAnimating ? 0 : 1\n    const cursor = this.state.isDragging ? 'grabbing' : 'grab'\n    const ppi = 100\n    const downloadableMap = (\n      <div className='mapDownload'>\n        <Map\n          mapStyle={this.props.mapStyle}\n          renderLevel={renderLevel}\n          projection={this.props.projection}\n          lat={this.state.lat}\n          lon={this.state.lon}\n          width={841*Math.sqrt(ppi)}\n          height={594*Math.sqrt(ppi)}\n          updateSvg={this.props.updateSvg}\n        />\n      </div>\n    )\n\n    return (\n      <div style={{cursor: cursor}}\n              onMouseDown={this._mouseDownHandler}\n              onMouseUp={this._mouseUpHandler}\n              onMouseMove={captureEvent(debounce(10, this._mouseMoveHandler))}>\n\n        <Map\n          mapStyle={this.props.mapStyle}\n          renderLevel={renderLevel}\n          projection={this.props.projection}\n          lat={this.state.lat}\n          lon={this.state.lon}\n          width={document.body.clientWidth}\n          height={document.body.clientHeight}\n        />\n\n        {renderLevel === 1 ? downloadableMap : ''}\n      </div>\n    )\n  }\n\n  _mouseDownHandler(e) {\n    const newState = {\n      isDragging: true,\n      lastCusorPos: {\n        x: e.pageX,\n        y: e.pageY\n      }\n    }\n    this.setState(Object.assign({}, this.state, newState))\n  }\n\n  _mouseUpHandler(e) {\n    const newState = {\n      isDragging: false,\n      lastCusorPos: {\n        x: null,\n        y: null\n      }\n    }\n    this.setState(Object.assign({}, this.state, newState))\n  }\n\n  _mouseMoveHandler(e) {\n    if(this.state.isDragging) {\n      const xDiff = e.pageX - this.state.lastCusorPos.x\n      const yDiff = e.pageY - this.state.lastCusorPos.y\n\n      const lon = this.state.lon-xDiff\n      const lat = this.state.lat+yDiff\n\n      this.props.onLocationChange(lat, lon, this.props.mapStyle.name)\n\n      this.setState(Object.assign({}, this.state, {\n        lon: lon,\n        lat: lat,\n        lastCusorPos: {\n          x: e.pageX,\n          y: e.pageY\n        }\n      }))\n    }\n  }\n\n  _animate(destLat, destLon) {\n    let onLocationChange = this.props.onLocationChange\n    const destCoords = {\n      lat: destLat,\n      lon: destLon\n    }\n\n    if(!coordinateEquals(this.state, destCoords)) {\n      this.setState(Object.assign({}, this.state, {isAnimating: true}))\n      const currentCoords = {\n        lat: this.state.lat,\n        lon: this.state.lon\n      }\n\n      const tween = new Between(currentCoords, destCoords)\n        .time(3000)\n        .easing(Between.Easing.Cubic.InOut)\n        .on('update', (v) => {\n            if(this.state.isAnimating) {\n              this.setState(Object.assign({}, this.state, {lat: v.lat, lon: v.lon}))\n            } else {\n              tween.pause()\n            }\n\n            if(this.state.isDragging) {\n              tween.pause()\n              this.setState(Object.assign({}, this.state, {isAnimating: false}))\n            }\n        }).on('complete', (value) => {\n            onLocationChange(this.state.lat, this.state.lon)\n            this.setState(Object.assign({}, this.state, {isAnimating: false}))\n        });\n    }\n  }\n}\n\n\nexport default MapRenderer;\n","import * as d3projections from 'd3-geo-projection';\n\nconst compatibleProjections = (name) => {\n  return !name.includes('Raw')\n}\n\nconst projections = Object.keys(d3projections).filter(compatibleProjections).map(v => {\n  return {\n    name: v.replace(/geo/g, ''),\n    displayName: v.replace(/geo/g, '').replace(/([A-Z])/g, ' $1').trim()\n  }\n})\n\nexport default {\n  list: projections,\n  default: projections[0],\n  isValid: (name) => {\n    return projections.filter((p) => p.name === name).length > 0\n  },\n  get: (name) => {\n    return projections.filter(p => name === p.name)[0]\n  }\n}\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport projections from '../Projections'\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    border: 'none',\n    borderTop: 'solid rgba(0,0,0, 0.05) 1px',\n    borderRadius: 0,\n    outline: 'none',\n    boxShadow: 'none',\n    ':hover': {\n      border: 'none',\n      borderTop: 'solid rgba(0,0,0, 0.05) 1px',\n    }\n  }),\n}\n\nconst projectionOptions = projections.list.map((p, i) => {\n  return {value: p.name, label: p.displayName}\n})\n\nconst ProjectionSelect = (props) => {\n  return (\n    <Select\n      value={props.value}\n      onChange={props.onChange}\n\n      options={projectionOptions}\n      styles={customStyles}\n    />\n  );\n}\n\nexport default ProjectionSelect;\n","import React, { Component } from 'react';\nimport feather from 'feather-icons'\nimport ky from 'ky';\nimport styles from './Styles'\nimport projections from './Projections'\n\nconst icon = (name, size) => {\n  const iconSvg = feather.icons[name].toSvg({ width: size, class: 'icon' })\n  return <span dangerouslySetInnerHTML={{__html: iconSvg}}></span>\n}\n\nconst styleIcon = (colorA, colorB, size, isSelected) => {\n  const style = {\n    width: size,\n    height: size,\n    boxShadow: isSelected ? '0 0 0pt 1.5pt rgba(0,0,0,0.2)' : 'none',\n  }\n  return (\n    <div className='styleIcon' style={style}>\n      <svg width={size} height={size}>\n        <rect fill={colorA} x='0' y='0' width={size} height={size} />\n        <polygon fill={colorB} points={`0,0 0,${size} ${size},0`} />\n      </svg>\n    </div>\n  )\n}\n\nconst updateUrl = (lat, lon, projection, style) => {\n  window.history.replaceState({}, '', `/${lat}/${lon}/${projection}/${style}`)\n}\n\nconst extractUrlParams = (urlParams) => {\n  const setDefault = () => {\n    updateUrl(0, 0, projections.default.name, styles.default.name)\n    return [0, 0, projections.default.name, styles.default.name]\n  }\n\n  const [lat, lon, projectionName, styleName] = urlParams\n\n  if(isNaN(lat) || isNaN(lon))              return setDefault()\n  if(!projections.isValid(projectionName))  return setDefault()\n  if(!styles.isValid(styleName))            return setDefault()\n\n  return [parseInt(lat, 10), parseInt(lon, 10), projectionName, styleName]\n}\n\nconst request = (address, callback) => {\n  const constructRequest = (a) => `https://eu1.locationiq.com/v1/search.php?key=${'10bb188a4dae33'}&q=${a}&format=json`\n  console.log(\"Making request\");\n  (async () => {\n    console.log(\"WHY IS NOD\");\n    const json = await ky.get(constructRequest(address)).json();\n    console.log(json);\n\n    callback(json)\n  })();\n}\n\nexport default {\n  icon: icon,\n  styleIcon: styleIcon,\n  updateUrl: updateUrl,\n  extractUrlParams: extractUrlParams,\n  request: request\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'normalize.css'\nimport MapRenderer from './components/MapRenderer'\nimport ProjectionSelect from './components/ProjectionSelect'\nimport styles from './Styles'\nimport download from 'downloadjs'\nimport domtoimage from 'dom-to-image';\nimport projections from './Projections'\nimport utils from './Utils'\n\nclass App extends Component {\n  constructor() {\n    super()\n    const pn = window.location.pathname.split('/').slice(1)\n    const [lat, lon, projectionName, styleName] = utils.extractUrlParams(pn)\n\n    this.state = {\n      searchString: '',\n      searchLat: lat,\n      searchLon: lon,\n      projection:  projectionName,\n      currentLat: 0,\n      currentLon: 0,\n      style: styles.get(styleName),\n      svgNode: null\n    }\n\n    this._inputHandler = this._inputHandler.bind(this)\n    this._geolocate = this._geolocate.bind(this)\n    this._download = this._download.bind(this)\n    this._handleKeyPress = this._handleKeyPress.bind(this)\n    this._onLocationChange = this._onLocationChange.bind(this)\n    this._changeStyle = this._changeStyle.bind(this)\n    this._changeProjection = this._changeProjection.bind(this)\n    this._updateSvg = this._updateSvg.bind(this)\n  }\n\n  render() {\n    const styleIcons = styles.list.map((s, key) => {\n      const isSelected = s.name === this.state.style.name\n      return <div key={key} onClick={() => this._changeStyle(s)} className='button'>{utils.styleIcon(s.land, s.sea, 16, isSelected)}</div>\n    })\n\n    const projectionOptions = projections.list.map((p, i) => {\n      return {value: p.name, label: p.displayName}\n    })\n\n    const handleProjectionChange = (selectedOption) => {\n      this._changeProjection(selectedOption.value)\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"toolbar\">\n          <div className='input'>\n            <input autoFocus placeholder='Type any location...' onKeyPress={this._handleKeyPress} onChange={this._inputHandler} />\n            <div className='button' onClick={this._geolocate}>{utils.icon('search', 16)}</div>\n          </div>\n          <div className='map-styles'>\n            {styleIcons}\n          </div>\n          <div className='projections'>\n            <ProjectionSelect\n              value={projectionOptions.filter(op => op.value === this.state.projection)}\n              onChange={handleProjectionChange}\n            />\n          </div>\n\n          <div className='download'>\n              <div className='button' onClick={() => this._download('svg')}> Save SVG </div>\n              <div className='button' onClick={() => this._download('png')}> Save PNG </div>\n          </div>\n        </div>\n\n        <MapRenderer\n          mapStyle={this.state.style}\n          projection={this.state.projection}\n          lat={this.state.searchLat}\n          lon={this.state.searchLon}\n          onLocationChange={this._onLocationChange}\n          updateSvg={this._updateSvg}\n        />\n      </div>\n    );\n  }\n\n  _updateSvg(s) {\n    this.setState(Object.assign({}, this.state, {svgNode: s}))\n  }\n\n  _changeStyle(s) {\n    utils.updateUrl(this.state.currentLat, this.state.currentLon, this.state.projection, s.name)\n    this.setState(Object.assign({}, this.state, {style: s}))\n  }\n\n  _changeProjection(projectionName) {\n    utils.updateUrl(this.state.currentLat, this.state.currentLon, projectionName, this.state.style.name)\n    this.setState(Object.assign({}, this.state, {projection: projectionName}))\n  }\n\n  _handleKeyPress(e) {\n    if(e.key === 'Enter') this._geolocate()\n  }\n\n  _onLocationChange(lat, lon) {\n    utils.updateUrl(lat, lon, this.state.projection, this.state.style.name)\n    this.setState(Object.assign({}, this.state, {currentLat: lat, currentLon: lon}))\n  }\n\n  _inputHandler(e) {\n    this.setState(Object.assign({}, this.state, {searchString: e.target.value}))\n  }\n\n  _download(fileFormat) {\n    const node = this.state.svgNode\n    console.log('Downloading...', node)\n\n    if(!node) return\n\n    if(fileFormat === 'svg') {\n      const blob = new Blob([node.innerHTML], {type: 'image/svg+xml'});\n      download(blob, \"maps.svg\", \"image/svg+xml\");\n      return\n    }\n\n    domtoimage.toPng(node)\n      .then(dataUrl => {\n          download(dataUrl, 'map.png')\n      })\n      .catch(error => {\n          console.error('oops, something went wrong!', error);\n      });\n  }\n\n  _geolocate(e) {\n    if(this.state.searchString.length === 0) {\n      this.setState(Object.assign({}, this.state, {searchLat: 0, searchLon: 0}))\n      return\n    }\n\n    utils.request(this.state.searchString,\n      (d) => this.setState(Object.assign({}, this.state, {searchLat: parseInt(d[0].lat), searchLon: parseInt(d[0].lon)}))\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}