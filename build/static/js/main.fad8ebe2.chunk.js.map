{"version":3,"sources":["components/map/Country.js","components/map/Label.js","components/map/Graticule.js","components/map/Bathymetry.js","components/Map.js","Styles.js","components/MapRenderer.js","Projections.js","components/ProjectionSelect.js","Utils.js","App.js","serviceWorker.js","index.js"],"names":["Country","props","path","d3","projection","react_default","a","createElement","className","d","feature","fill","stroke","strokeWidth","Label","size","fontStyle","concat","value","properties","NAME","xOffset","length","x","y","color","style","font","Graticule","Bathymetry","Map","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_getStatePaths","bind","assertThisInitialized","_getGraticules","_getBathymetry","_getLabelData","svgRef","React","createRef","labelData","MAPDATA_HIGH","features","map","area","coordinates","centroid","d3projections","updateSvg","current","w","width","h","height","lon","lat","renderLevel","showLabels","showGraticules","center","translate","rotate","fitExtent","MAPDATA_LOW","mapData","statePaths","graticules","GRATICULES","labels","bathymetry","ref","xmlns","mapStyle","sea","data","_this2","i","map_Country","borders","land","key","_this3","map_Graticule","_this4","dataset","j","map_Bathymetry","_this5","c","projectedCoord","map_Label","Component","styles","name","icon","top","bottom","Styles","list","default","isValid","filter","p","get","s","coordinateEquals","b","objectEquals","JSON","stringify","MapRenderer","window","onresize","forceUpdate","state","isDragging","isAnimating","lastCusorPos","_mouseDownHandler","_mouseUpHandler","_mouseMoveHandler","setState","assign","_animate","nextProps","nextState","handler","cursor","downloadableMap","components_Map","Math","sqrt","onMouseDown","onMouseUp","onMouseMove","debounce","e","persist","document","body","clientWidth","clientHeight","newState","pageX","pageY","xDiff","yDiff","onLocationChange","destLat","destLon","destCoords","currentCoords","tween","Between","time","easing","Easing","Cubic","InOut","on","v","pause","projections","keys","includes","replace","displayName","trim","Projections","customStyles","control","provided","objectSpread","border","borderTop","borderRadius","outline","boxShadow",":hover","projectionOptions","label","ProjectionSelect","react_select_esm","onChange","options","updateUrl","history","replaceState","Utils","arguments","undefined","iconSvg","feather","icons","toSvg","dangerouslySetInnerHTML","__html","styleIcon","topColor","bottomColor","isSelected","points","extractUrlParams","urlParams","setDefault","_urlParams","slicedToArray","projectionName","styleName","isNaN","parseInt","request","address","callback","console","log","asyncToGenerator","regenerator_default","mark","_callee","json","wrap","_context","prev","next","ky","sent","stop","SwalWithReact","withReactContent","Swal","message","showInfo","fire","title","showConfirmButton","html","footer","onOpen","App","pn","location","pathname","split","slice","_utils$extractUrlPara","utils","_utils$extractUrlPara2","searchString","searchLat","searchLon","currentLat","currentLon","svgNode","_inputHandler","_geolocate","_download","_handleKeyPress","_onLocationChange","_changeStyle","_changeProjection","_updateSvg","styleIcons","onClick","graticuleColor","labelColor","autoFocus","placeholder","onKeyPress","components_ProjectionSelect","op","selectedOption","components_MapRenderer","target","fileFormat","node","blob","Blob","innerHTML","type","download","domtoimage","toPng","then","dataUrl","catch","error","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fad8ebe2.chunk.js","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\n\nconst Country = (props) => {\n  const path = d3.geoPath().projection(props.projection)\n\n  return (\n    <g>\n      <path className='country' d={path(props.feature)} fill={props.fill} stroke={props.stroke} strokeWidth={props.strokeWidth} />\n    </g>\n  )\n}\n\nexport default Country;\n","import React from 'react';\n\nconst Label = (props) => {\n  const size = props.size\n  const fontStyle = `bold ${size}px sans-serif` //${props.size > 20 ? 'bold' : 'normal'}\n  const value = props.properties.NAME\n  const xOffset = (value.length/2)*2.3+size\n\n  return (\n    <text\n      stroke='white'\n      strokeWidth={0.3}\n      x={props.x-xOffset}\n      y={props.y}\n      fill={props.color}\n      style={{font: fontStyle, color: props.color}}>\n\n      {value}\n    </text>\n  )\n}\n\nexport default Label;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nconst Graticule = (props) => {\n  const path = d3.geoPath().projection(props.projection)\n\n  return (\n    <g>\n      <path className='graticule' d={path(props.feature)} fill=\"none\" stroke={props.stroke} strokeWidth={props.strokeWidth} />\n    </g>\n  )\n}\n\nexport default Graticule;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nconst Bathymetry = (props) => {\n  const path = d3.geoPath().projection(props.projection)\n  //rgba(117, 193, 240, 0.63)\n\n  return (\n    <g>\n      <path className='bathymetry' d={path(props.feature)} fill={props.fill} stroke=\"#FEAB6C\" strokeWidth={0} />\n    </g>\n  )\n}\n\nexport default Bathymetry;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as d3projections from 'd3-geo-projection';\n\nimport Country from './map/Country'\nimport Label from './map/Label'\nimport Graticule from './map/Graticule'\nimport Bathymetry from './map/Bathymetry'\n\nimport MAPDATA_LOW from '../map-data/110m';\nimport MAPDATA_HIGH from '../map-data/50m';\nimport GRATICULES from '../map-data/graticules_10';\n\n// import BATHYMETRY_0 from '../map-data/bathymetry_J_1000';\n// import BATHYMETRY_1 from '../map-data/bathymetry_H_3000';\n// import BATHYMETRY_2 from '../map-data/bathymetry_G_4000';\n// import BATHYMETRY_3 from '../map-data/bathymetry_F_5000';\n\nclass Map extends Component {\n  constructor() {\n    super()\n\n    this._getStatePaths = this._getStatePaths.bind(this)\n    this._getGraticules = this._getGraticules.bind(this)\n    this._getBathymetry = this._getBathymetry.bind(this)\n    this._getLabelData = this._getLabelData.bind(this)\n\n    this.svgRef = React.createRef()\n  }\n\n  componentWillMount() {\n    const getLabelData = (data) => {\n     return data.features.map(feature => {\n       return {\n         size: d3.geoPath().area(feature),\n         coordinates: d3.geoPath().centroid(feature),\n         properties: feature.properties\n       }\n     })\n    }\n\n    this.labelData = getLabelData(MAPDATA_HIGH)\n    this.projection = d3projections.geoCylindricalEqualArea()\n  }\n\n  componentDidUpdate(props) {\n    if(props.updateSvg) {\n      this.props.updateSvg(this.svgRef.current)\n    }\n  }\n\n  componentDidMount() {\n    if(this.props.updateSvg) {\n      this.props.updateSvg(this.svgRef.current)\n    }\n  }\n\n  render() {\n    const w = this.props.width\n    const h = this.props.height\n    const lon = this.props.lon\n    const lat = this.props.lat\n    const projection = 'geo'+this.props.projection\n    const renderLevel = this.props.renderLevel\n    const showLabels = this.props.showLabels\n    const showGraticules = this.props.showGraticules\n\n    this.projection = d3projections[projection]()\n     .center([0, 0])\n     .translate([w/2,h/2])\n     .rotate([-lon,-lat, 0])\n     .fitExtent([[30, 30],[w-30, h-30]], MAPDATA_LOW)\n\n    const mapData = renderLevel === 1 ? MAPDATA_HIGH : MAPDATA_LOW\n    const statePaths = this._getStatePaths(mapData)\n\n    const graticules = (renderLevel === 1) && showGraticules ? this._getGraticules(GRATICULES) : []\n    const labels = (renderLevel === 1) && showLabels ? this._getLabelData() : []\n\n    const bathymetry = this.props.renderLevel === 0 ? [] : []//this._getBathymetry([BATHYMETRY_3])\n\n    return (\n      <div>\n        <div ref={this.svgRef}>\n          <svg xmlns='http://www.w3.org/2000/svg' className=\"container noselect\" width={this.props.width} height={this.props.height}>\n            <rect width={this.props.width} height={this.props.height} fill={this.props.mapStyle.sea}></rect>\n            <g className=\"countries\">\n              {statePaths}\n            </g>\n            <g className=\"bathymetry\">\n              {bathymetry}\n            </g>\n            <g className=\"graticules\">\n              {graticules}\n            </g>\n            <g className=\"labels\">\n              {labels}\n            </g>\n          </svg>\n        </div>\n      </div>\n    );\n  }\n\n  _getStatePaths(data) {\n    return data.features.map((feature, i) => {\n      return <Country stroke={this.props.mapStyle.borders} strokeWidth={this.props.width/3000} fill={this.props.mapStyle.land} projection={this.projection} feature={feature} key={i} />;\n    })\n  }\n\n  _getGraticules(data) {\n    return data.features.map((feature, i) => {\n      return <Graticule stroke={this.props.mapStyle.graticules} strokeWidth={this.props.width/2000} projection={this.projection} feature={feature} key={i} />;\n    })\n  }\n\n  _getBathymetry(data) {\n    return data.map((dataset, i) => {\n      return dataset.features.map((feature, j) => {\n        return <Bathymetry fill={this.props.mapStyle.sea} projection={this.projection} feature={feature} key={i+j} />;\n      })\n    })\n  }\n\n  _getLabelData() {\n    // TODO: This dataset is actually already available on the natural earth repo in the /geojson directory\n    // This would mean no edge cases like america label offset because of Hawaii skewing centroid\n    return this.labelData.map((c, i) => {\n      const projectedCoord = this.projection([c.coordinates[0], c.coordinates[1]])\n      return <Label x={projectedCoord[0]} y={projectedCoord[1]} properties={c.properties} color={this.props.mapStyle.labels} size={this.props.width/230} key={i}/>\n    })\n  }\n}\n\nexport default Map;\n","const styles = [\n  {\n    name: 'namria',\n    land: '#E6E8E9',\n    sea: '#C4D4E0',\n    labels: 'black',\n    borders: '#B90700',\n    graticules: '#B90700',\n    icon: {\n      top: '#E6E8E9',\n      bottom: '#C4D4E0',\n    }\n  },\n  {\n    name: 'contrast',\n    land: 'white',\n    sea: 'white',\n    labels: 'black',\n    borders: 'black',\n    graticules: 'black',\n    icon: {\n      top: 'white',\n      bottom: 'black',\n    }\n  },\n  {\n    name: 'brownie',\n    land: 'brown',\n    sea: 'blue',\n    labels: 'white',\n    borders: 'orange',\n    graticules: 'orange',\n    icon: {\n      top: 'brown',\n      bottom: 'blue',\n    }\n  },\n  {\n    name: 'orangeface',\n    land: 'orange',\n    sea: 'red',\n    labels: 'white',\n    borders: 'brown',\n    graticules: 'brown',\n    icon: {\n      top: 'orange',\n      bottom: 'red',\n    }\n  },\n]\n\nexport default {\n  list: styles,\n  default: styles[0],\n  isValid: (name) => {\n    return styles.filter((p) => p.name === name).length > 0\n  },\n  get: (name) => {\n    return styles.filter(s => name === s.name)[0]\n  }\n}\n","import React, { Component } from 'react';\nimport Between from 'between.js';\nimport { debounce } from 'throttle-debounce';\nimport Map from './Map'\nimport styles from '../Styles'\n\nconst coordinateEquals = (a, b) => {\n  return a.lat === b.lat && a.lon === b.lon\n}\n\nconst objectEquals = (a, b) => {\n  return JSON.stringify(a) === JSON.stringify(b)\n}\n\nconst captureEvent = (handler) => {\n  return (e) => {\n    e.persist()\n    return handler(e)\n  }\n}\n\nclass MapRenderer extends Component {\n  constructor() {\n    super()\n    window.onresize = () => {\n      this.forceUpdate()\n    }\n\n    this.state = {\n      lat: 0,\n      lon: 0,\n      style: styles[0],\n      isDragging: false,\n      isAnimating: false,\n      lastCusorPos: {\n        x: null,\n        y: null\n      },\n    }\n\n    this._mouseDownHandler = this._mouseDownHandler.bind(this)\n    this._mouseUpHandler = this._mouseUpHandler.bind(this)\n    this._mouseMoveHandler = this._mouseMoveHandler.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState(Object.assign({}, this.state, {lat: this.props.lat, lon: this.props.lon}))\n  }\n\n  componentWillReceiveProps(props) {\n    if(!coordinateEquals(props, this.state) && !coordinateEquals(props, this.props)){\n      this._animate(props.lat, props.lon)\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Prevent unnecesary rerenders when typing into input box\n    if(objectEquals(this.props, nextProps) && objectEquals(this.state, nextState)) {\n      return false\n    }\n    return true\n  }\n\n  render() {\n    const renderLevel = this.state.isDragging || this.state.isAnimating ? 0 : 1\n    const cursor = this.state.isDragging ? 'grabbing' : 'grab'\n    const ppi = 100\n    const downloadableMap = (\n      <div className='mapDownload'>\n        <Map\n          mapStyle={this.props.mapStyle}\n          renderLevel={renderLevel}\n          projection={this.props.projection}\n          lat={this.state.lat}\n          lon={this.state.lon}\n          width={841*Math.sqrt(ppi)}\n          height={594*Math.sqrt(ppi)}\n          updateSvg={this.props.updateSvg}\n\n          showLabels={this.props.showLabels}\n          showGraticules={this.props.showGraticules}\n        />\n      </div>\n    )\n\n    return (\n      <div style={{cursor: cursor}}\n              onMouseDown={this._mouseDownHandler}\n              onMouseUp={this._mouseUpHandler}\n              onMouseMove={captureEvent(debounce(10, this._mouseMoveHandler))}>\n\n        <Map\n          mapStyle={this.props.mapStyle}\n          renderLevel={renderLevel}\n          projection={this.props.projection}\n          lat={this.state.lat}\n          lon={this.state.lon}\n          width={document.body.clientWidth}\n          height={document.body.clientHeight}\n          \n          showLabels={this.props.showLabels}\n          showGraticules={this.props.showGraticules}\n        />\n\n        {renderLevel === 1 ? downloadableMap : ''}\n      </div>\n    )\n  }\n\n  _mouseDownHandler(e) {\n    const newState = {\n      isDragging: true,\n      lastCusorPos: {\n        x: e.pageX,\n        y: e.pageY\n      }\n    }\n    this.setState(Object.assign({}, this.state, newState))\n  }\n\n  _mouseUpHandler(e) {\n    const newState = {\n      isDragging: false,\n      lastCusorPos: {\n        x: null,\n        y: null\n      }\n    }\n    this.setState(Object.assign({}, this.state, newState))\n  }\n\n  _mouseMoveHandler(e) {\n    if(this.state.isDragging) {\n      const xDiff = e.pageX - this.state.lastCusorPos.x\n      const yDiff = e.pageY - this.state.lastCusorPos.y\n\n      const lon = this.state.lon-xDiff\n      const lat = this.state.lat+yDiff\n\n      this.props.onLocationChange(lat, lon, this.props.mapStyle.name)\n\n      this.setState(Object.assign({}, this.state, {\n        lon: lon,\n        lat: lat,\n        lastCusorPos: {\n          x: e.pageX,\n          y: e.pageY\n        }\n      }))\n    }\n  }\n\n  _animate(destLat, destLon) {\n    let onLocationChange = this.props.onLocationChange\n    const destCoords = {\n      lat: destLat,\n      lon: destLon\n    }\n\n    if(!coordinateEquals(this.state, destCoords)) {\n      this.setState(Object.assign({}, this.state, {isAnimating: true}))\n      const currentCoords = {\n        lat: this.state.lat,\n        lon: this.state.lon\n      }\n\n      const tween = new Between(currentCoords, destCoords)\n        .time(3000)\n        .easing(Between.Easing.Cubic.InOut)\n        .on('update', (v) => {\n            if(this.state.isAnimating) {\n              this.setState(Object.assign({}, this.state, {lat: v.lat, lon: v.lon}))\n            } else {\n              tween.pause()\n            }\n\n            if(this.state.isDragging) {\n              tween.pause()\n              this.setState(Object.assign({}, this.state, {isAnimating: false}))\n            }\n        }).on('complete', (value) => {\n            onLocationChange(this.state.lat, this.state.lon)\n            this.setState(Object.assign({}, this.state, {isAnimating: false}))\n        });\n    }\n  }\n}\n\n\nexport default MapRenderer;\n","import * as d3projections from 'd3-geo-projection';\n\nconst removeRaw = (name) => {\n  return !name.includes('Raw')\n}\n\n// Litrow is a crazy one\n\nconst removeCrashing = (name) => {\n  return ![\n    'geoBertin1953',\n    'geoChamberlin',\n    'geoChamberlinAfrica',\n    'geoGilbert',\n    'geoInterrupt',\n    'geoModifiedStereographic',\n    'geoModifiedStereographicAlaska',\n    'geoModifiedStereographicGs48',\n    'geoModifiedStereographicGs50',\n    'geoModifiedStereographicMiller',\n    'geoModifiedStereographicLee',\n    'geoPolyhedral',\n    'geoProject',\n    'geoQuantize',\n    'geoQuincuncial',\n    'geoStitch',\n    'geoTwoPointAzimuthal',\n    'geoTwoPointAzimuthalUsa',\n    'geoTwoPointEquidistant',\n    'geoTwoPointEquidistantUsa'\n\n  ].includes(name)\n}\n\nconst projections = Object.keys(d3projections).filter(removeRaw).filter(removeCrashing).map(v => {\n  return {\n    name: v.replace(/geo/g, ''),\n    displayName: v.replace(/geo/g, '').replace(/([A-Z])/g, ' $1').trim()\n  }\n})\n\nexport default {\n  list: projections,\n  default: projections[0],\n  isValid: (name) => {\n    return projections.filter((p) => p.name === name).length > 0\n  },\n  get: (name) => {\n    return projections.filter(p => name === p.name)[0]\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport projections from '../Projections'\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    border: 'none',\n    borderTop: 'solid rgba(0,0,0, 0.05) 1px',\n    borderRadius: 0,\n    outline: 'none',\n    boxShadow: 'none',\n    ':hover': {\n      border: 'none',\n      borderTop: 'solid rgba(0,0,0, 0.05) 1px',\n    }\n  }),\n}\n\nconst projectionOptions = projections.list.map((p, i) => {\n  return {value: p.name, label: p.displayName}\n})\n\nconst ProjectionSelect = (props) => {\n  return (\n    <Select\n      value={props.value}\n      onChange={props.onChange}\n\n      options={projectionOptions}\n      styles={customStyles}\n    />\n  );\n}\n\nexport default ProjectionSelect;\n","import React from 'react';\nimport feather from 'feather-icons'\nimport ky from 'ky';\nimport styles from './Styles'\nimport projections from './Projections'\n\nconst icon = (name, size, color='grey', fill='none') => {\n  const iconSvg = feather.icons[name].toSvg({ width: size, fill, stroke: color })\n  return <span dangerouslySetInnerHTML={{__html: iconSvg}}></span>\n}\n\nconst styleIcon = (topColor, bottomColor, size, isSelected) => {\n  const style = {\n    width: size,\n    height: size,\n    boxShadow: isSelected ? '0 0 0pt 1.5pt rgba(0,0,0,0.2)' : 'none',\n  }\n  return (\n    <div className='styleIcon' style={style}>\n      <svg width={size} height={size}>\n        <rect fill={bottomColor} x='0' y='0' width={size} height={size} />\n        <polygon fill={topColor} points={`0,0 0,${size} ${size},0`} />\n      </svg>\n    </div>\n  )\n}\n\nconst updateUrl = (lat, lon, projection, style) => {\n  window.history.replaceState({}, '', `/${lat}/${lon}/${projection}/${style}`)\n}\n\nconst extractUrlParams = (urlParams) => {\n  const setDefault = () => {\n    updateUrl(0, 0, projections.default.name, styles.default.name)\n    return [0, 0, projections.default.name, styles.default.name]\n  }\n\n  const [lat, lon, projectionName, styleName] = urlParams\n\n  if(isNaN(lat) || isNaN(lon))              return setDefault()\n  if(!projections.isValid(projectionName))  return setDefault()\n  if(!styles.isValid(styleName))            return setDefault()\n\n  return [parseInt(lat, 10), parseInt(lon, 10), projectionName, styleName]\n}\n\nconst request = (address, callback) => {\n  const constructRequest = (a) => `https://eu1.locationiq.com/v1/search.php?key=${'10bb188a4dae33'}&q=${a}&format=json`\n  console.log(\"Making request\");\n  (async () => {\n    console.log(\"WHY IS NOD\");\n    const json = await ky.get(constructRequest(address)).json();\n    console.log(json);\n\n    callback(json)\n  })();\n}\n\nexport default {\n  icon,\n  styleIcon,\n  updateUrl,\n  extractUrlParams,\n  request,\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'normalize.css'\nimport MapRenderer from './components/MapRenderer'\nimport ProjectionSelect from './components/ProjectionSelect'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport styles from './Styles'\nimport download from 'downloadjs'\nimport domtoimage from 'dom-to-image';\nimport projections from './Projections'\nimport utils from './Utils'\n\nconst SwalWithReact = withReactContent(Swal)\nconst message = (\n  <div>\n    Information about the project will be put here once written.\n    Assumenda sit et iusto aperiam praesentium. Repellendus autem minima quia. Molestiae animi qui sunt nisi magnam voluptatem.\n    Consequatur eos consequatur et. Illo praesentium quis maiores nobis sit quia ab in. Sed quo et facilis esse et ut architecto. Pariatur perferendis deleniti ab non molestias ad enim rem. Consequatur autem repellendus ipsam maiores. Hic aliquid eaque voluptates explicabo molestiae fugit dolor.\n    Rerum voluptatum quis ratione. Aut autem non accusantium. Error eius deserunt corrupti voluptatibus quas cum magnam illum. Eius earum reprehenderit nisi. Et harum quae ipsam. Autem saepe exercitationem exercitationem aut quos est.\n    Exercitationem inventore quae enim hic sed. Corrupti provident est modi ipsa nihil et odit. Debitis illum expedita omnis voluptatum qui ipsum non sint. Necessitatibus quidem molestiae perspiciatis magni qui. Voluptates eius harum adipisci repudiandae laboriosam nisi deserunt qui.\n  </div>\n)\n\nconst showInfo = () => SwalWithReact.fire({\n  title: <p>Hello World</p>,\n  showConfirmButton: false,\n  html: message,\n  footer: 'Copyright 2018',\n  onOpen: () => {\n    // `MySwal` is a subclass of `Swal`\n    //   with all the same instance & static methods\n    // SwalWithReact.clickConfirm()\n  }\n})\n\nclass App extends Component {\n  constructor() {\n    super()\n    const pn = window.location.pathname.split('/').slice(1)\n    const [lat, lon, projectionName, styleName] = utils.extractUrlParams(pn)\n\n    this.state = {\n      searchString: '',\n      searchLat: lat,\n      searchLon: lon,\n      projection:  projectionName,\n      currentLat: 0,\n      currentLon: 0,\n      style: styles.get(styleName),\n      showLabels: true,\n      showGraticules: true,\n      svgNode: null\n    }\n\n    this._inputHandler = this._inputHandler.bind(this)\n    this._geolocate = this._geolocate.bind(this)\n    this._download = this._download.bind(this)\n    this._handleKeyPress = this._handleKeyPress.bind(this)\n    this._onLocationChange = this._onLocationChange.bind(this)\n    this._changeStyle = this._changeStyle.bind(this)\n    this._changeProjection = this._changeProjection.bind(this)\n    this._updateSvg = this._updateSvg.bind(this)\n  }\n\n  render() {\n    const styleIcons = styles.list.map((s, key) => {\n      const isSelected = s.name === this.state.style.name\n      return <div key={key} onClick={() => this._changeStyle(s)} className='button'>{utils.styleIcon(s.icon.top, s.icon.bottom, 16, isSelected)}</div>\n    })\n\n    const projectionOptions = projections.list.map((p, i) => ({value: p.name, label: p.displayName}))\n    const handleProjectionChange = (selectedOption) => this._changeProjection(selectedOption.value)\n\n    const toggleLabels = () => this.setState(Object.assign({}, this.state, {showLabels: !this.state.showLabels}))\n    const toggleGraticules = () => this.setState(Object.assign({}, this.state, {showGraticules: !this.state.showGraticules}))\n\n    const graticuleColor = this.state.showGraticules ? 'green' : 'grey'\n    const labelColor = this.state.showLabels ? 'green' : 'grey'\n\n    return (\n      <div className='App'>\n        <div className='info' onClick={showInfo}>{utils.icon('help-circle', 24, this.state.style.icon.top, this.state.style.icon.bottom)}</div>\n        <div className='toolbar'>\n          <div className='input'>\n            <input autoFocus placeholder='Type any location to orient...' onKeyPress={this._handleKeyPress} onChange={this._inputHandler} />\n            <div className='button' onClick={this._geolocate}>{utils.icon('search', 16)}</div>\n          </div>\n          <div className='layers'>\n            <div onClick={toggleLabels} className='button'>{utils.icon('type', 14, labelColor)}</div>\n            <div onClick={toggleGraticules} className='button'>{utils.icon('target', 14, graticuleColor)}</div>\n          </div>\n          <div className='map-styles'>\n            {styleIcons}\n          </div>\n          <div className='projections'>\n            <ProjectionSelect\n              value={projectionOptions.filter(op => op.value === this.state.projection)}\n              onChange={handleProjectionChange}\n            />\n          </div>\n\n          <div className='download'>\n              <div className='button' onClick={() => this._download('svg')}> Save SVG </div>\n              <div className='button' onClick={() => this._download('png')}> Save PNG </div>\n          </div>\n        </div>\n\n        <MapRenderer\n          mapStyle={this.state.style}\n          projection={this.state.projection}\n          lat={this.state.searchLat}\n          lon={this.state.searchLon}\n          showLabels={this.state.showLabels}\n          showGraticules={this.state.showGraticules}\n          onLocationChange={this._onLocationChange}\n          updateSvg={this._updateSvg}\n        />\n      </div>\n    );\n  }\n\n  _updateSvg(s) {\n    this.setState(Object.assign({}, this.state, {svgNode: s}))\n  }\n\n  _changeStyle(s) {\n    utils.updateUrl(this.state.currentLat, this.state.currentLon, this.state.projection, s.name)\n    this.setState(Object.assign({}, this.state, {style: s}))\n  }\n\n  _changeProjection(projectionName) {\n    utils.updateUrl(this.state.currentLat, this.state.currentLon, projectionName, this.state.style.name)\n    this.setState(Object.assign({}, this.state, {projection: projectionName}))\n  }\n\n  _handleKeyPress(e) {\n    if(e.key === 'Enter') this._geolocate()\n  }\n\n  _onLocationChange(lat, lon) {\n    utils.updateUrl(lat, lon, this.state.projection, this.state.style.name)\n    this.setState(Object.assign({}, this.state, {currentLat: lat, currentLon: lon}))\n  }\n\n  _inputHandler(e) {\n    this.setState(Object.assign({}, this.state, {searchString: e.target.value}))\n  }\n\n  _download(fileFormat) {\n    const node = this.state.svgNode\n    console.log('Downloading...', node)\n\n    if(!node) return console.log('Svg node invalid...', node)\n\n    if(fileFormat === 'svg') {\n      const blob = new Blob([node.innerHTML], {type: 'image/svg+xml'});\n      return download(blob, 'maps.svg', 'image/svg+xml');\n    }\n\n    domtoimage.toPng(node)\n      .then(dataUrl => {\n          download(dataUrl, 'map.png')\n      })\n      .catch(error => {\n          console.error('oops, something went wrong!', error);\n      });\n  }\n\n  _geolocate(e) {\n    if(this.state.searchString.length === 0) {\n      this.setState(Object.assign({}, this.state, {searchLat: 0, searchLon: 0}))\n      return\n    }\n\n    utils.request(this.state.searchString,\n      (d) => this.setState(Object.assign({}, this.state, {searchLat: parseInt(d[0].lat), searchLon: parseInt(d[0].lon)}))\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}